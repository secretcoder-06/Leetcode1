class Solution {
public: 
     inline void  counting_sort(vector<int>& arr){
        int freq[101]={0};
        for(int x: arr) freq[x]++;
        int cnt=0;
        for(int x=1; x<=100; x++){
            int f=freq[x];
            if (f==0) continue;
            fill(arr.begin()+cnt, arr.begin()+cnt+f, x);
            cnt+=f;
        }

    }

    int minMovesToSeat(vector<int>& seats, vector<int>& students) {
        const int n=seats.size();
        counting_sort(seats);
        counting_sort(students);
        int moves=0;
        for (int i=0; i<n; i++) 
            moves+=abs(students[i]-seats[i]);
        return moves;
    }
};

auto init = []() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    return 'c';
}();
